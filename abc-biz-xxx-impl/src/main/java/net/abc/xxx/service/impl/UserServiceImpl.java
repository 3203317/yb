package net.abc.xxx.service.impl;import java.util.Date;import java.util.List;import org.springframework.stereotype.Service;import org.springframework.util.Assert;import net.abc.model.ResultMap;import net.abc.service.impl.BaseService;import net.abc.util.StringUtil;import net.abc.util.encryptUtil.MD5;import net.abc.xxx.model.User;import net.abc.xxx.service.UserService;import tk.mybatis.mapper.entity.Example;/** * * @author huangxin <3203317@qq.com> * */@Service("userService")public class UserServiceImpl extends BaseService<User> implements UserService {	@Override	public int updateNotNull(User entity) {		entity.setCreate_time(null);		entity.setPid(null);		return super.updateNotNull(entity);	}	@Override	public int save(User entity) {		entity.setId(null);		entity.setCreate_time(new Date());		entity.setStatus(Status.START.value());		return super.save(entity);	}	@Override	public ResultMap<Void> setStatus(String id, Status status) {		// TODO Auto-generated method stub		return null;	}	@Override	public ResultMap<Void> remove(String id) {		// TODO Auto-generated method stub		return null;	}	/**	 * 	 * @param user_name	 * @return	 */	private User loginCheck(String user_name) {		User entity = null;		entity = new User();		entity.setUser_name(user_name);		entity = getByUser(entity);		if (null != entity) {			return entity;		}		entity = new User();		entity.setEmail(user_name);		entity = getByUser(entity);		if (null != entity) {			return entity;		}		entity = new User();		entity.setMobile(user_name);		entity = getByUser(entity);		if (null != entity) {			return entity;		}		return null;	}	@Override	public ResultMap<User> login(String user_name, String user_pass) {		ResultMap<User> map = new ResultMap<User>();		map.setSuccess(false);		User entity = loginCheck(user_name);		if (null == entity) {			map.setMsg("用户名或密码输入错误");			return map;		}		if (Status.START.value() != entity.getStatus()) {			map.setMsg("你已被限制登陆");			return map;		}		if (!MD5.encode(user_pass).equals(entity.getUser_pass())) {			map.setMsg("用户名或密码输入错误");			return map;		}		map.setData(entity);		map.setSuccess(true);		return map;	}	@Override	public ResultMap<User> register(User entity) {		// TODO Auto-generated method stub		return null;	}	@Override	public ResultMap<Void> editInfo(User entity) {		// TODO Auto-generated method stub		return null;	}	@Override	public ResultMap<Void> resetPwd(String id, String user_pass) {		// TODO Auto-generated method stub		return null;	}	@Override	public List<User> findByUser(User entity, int page, int rows) {		// TODO Auto-generated method stub		return null;	}	@Override	public User getByUser(User entity) {		if (null == entity)			return null;		Example example = new Example(User.class);		Example.Criteria criteria = example.createCriteria();		String pid = StringUtil.isEmpty(entity.getPid());		if (null != pid) {			criteria.andEqualTo("pid", pid);		}		String user_name = StringUtil.isEmpty(entity.getUser_name());		if (null != user_name) {			criteria.andEqualTo("user_name", user_name);		}		String mobile = StringUtil.isEmpty(entity.getMobile());		if (null != mobile) {			criteria.andEqualTo("mobile", mobile);		}		String email = StringUtil.isEmpty(entity.getEmail());		if (null != email) {			criteria.andEqualTo("email", email);		}		List<User> list = selectByExample(example);		Assert.notNull(list, "user list is null");		return 1 == list.size() ? list.get(0) : null;	}	@Override	public ResultMap<Void> changePwd(String id, String old_pass, String new_pass) {		// TODO Auto-generated method stub		return null;	}	@Override	public User getByName(String user_name) {		User entity = new User();		entity.setUser_name(user_name);		return getByUser(entity);	}}